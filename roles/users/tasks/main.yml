# roles/users/tasks/main.yml
---
- name: Adding primary group
  group:
    name: "{{ item.groupname }}"
    gid: "{{ item.gid | default(omit) }}"
    state: present
  with_items: "{{ openio_users_group }}"
  when: openio_users_group is defined and openio_users_group

- name: Adding secondary groups
  group:
    name: "{{ item.groupname }}"
    gid: "{{ item.gid | default(omit) }}"
    state: present
  with_items: "{{ openio_users_groups | default([]) }}"
  when: openio_users_groups is defined and openio_users_groups

- name: Adding users
  user:
    name: "{{ item.username }}"
    uid: "{{ item.uid | default(omit) }}"
    home: "{{ item.home | default(openio_users_home ~ '/' ~ item.username ) }}"
    comment: "{{ item.name | default(omit) }}"
    system: "{{ item.system | default(omit) }}"
    generate_ssh_key: "{{ item.ssh_key_generate | default(omit) }}"
    group: "{{ item.group if item.group is defined else (openio_users_group if openio_users_group else omit) }}"
    groups: "{{ item.groups|join(',') if item.groups is defined else openio_users_groups|join(',')}}"
    append: "{{ item.append | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    ssh_key_file: ".ssh/id_{{ item.ssh_key_type | default(openio_users_ssh_key_type) }}"
    ssh_key_passphrase: "{{ item.ssh_key_password | default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(openio_users_ssh_key_bits) }}"
    createhome: "{{ item.home_create | default(omit) }}"
    shell: "{{ item.shell | default(omit) }}"
    update_password: "{{ item.update_password | default(omit) }}"
  with_items: "{{ openio_users_add }}"

- name: Setting user's home permission
  file:
    dest: "{{ item.home | default(openio_users_home ~ '/' ~ item.username) }}"
    owner: "{{ item.username }}"
    group:
      "{{ item.group if item.group is defined else (openio_users_group if openio_users_group else item.username) }}"
    mode: "{{ item.home_mode if item.home_mode is defined else openio_users_home_mode }}"
  when: item.home_create is not defined or item.home_create
  with_items: "{{ openio_users_add }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Adding user's .ssh directory
  file:
    path: "{{ item.home | default(openio_users_home ~ '/' ~ item.username) }}/.ssh"
    owner: "{{ item.username }}"
    group:
      "{{ item.group if item.group is defined else (openio_users_group if openio_users_group else item.username) }}"
    state: directory
    mode: '0700'
  when: item.home_create is not defined or item.home_create
  with_items: "{{ openio_users_add }}"

- name: Adding user's private key
  template:
    src: private_key.j2
    dest: "{{ item.home \
      | default(openio_users_home ~ '/' ~ item.username) }}/.ssh/id_{{ item.ssh_key_type | default('rsa') }}"
    owner: "{{ item.username }}"
    group:
      "{{ item.group if item.group is defined else (openio_users_group if openio_users_group else item.username) }}"
    mode: '0600'
  when: (item.home_create is not defined or item.home_create) and item.ssh_key is defined
  with_items: "{{ openio_users_add }}"

- name: Adding user's authorized keys
  authorized_key:
    key: "{{ item.authorized_keys | default([]) | join('\n') }}"
    user: "{{ item.username }}"
    exclusive: "{{ item.authorized_keys_exclusive | default(openio_users_authorized_keys_exclusive) }}"
  when: item.home_create is not defined or item.home_create
  with_items: "{{ openio_users_add }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Removing users
  user:
    name: "{{ item }}"
    state: absent
    remove: true
  with_items: "{{ openio_users_remove }}"
...
